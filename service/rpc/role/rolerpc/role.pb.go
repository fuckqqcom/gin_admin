// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/role.proto

package admin

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RoleParams struct {
	Rid                  string   `protobuf:"bytes,3,opt,name=rid,proto3" json:"rid,omitempty"`
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GroupId              string   `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleParams) Reset()         { *m = RoleParams{} }
func (m *RoleParams) String() string { return proto.CompactTextString(m) }
func (*RoleParams) ProtoMessage()    {}
func (*RoleParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_d895858b00dee792, []int{0}
}

func (m *RoleParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleParams.Unmarshal(m, b)
}
func (m *RoleParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleParams.Marshal(b, m, deterministic)
}
func (m *RoleParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleParams.Merge(m, src)
}
func (m *RoleParams) XXX_Size() int {
	return xxx_messageInfo_RoleParams.Size(m)
}
func (m *RoleParams) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleParams.DiscardUnknown(m)
}

var xxx_messageInfo_RoleParams proto.InternalMessageInfo

func (m *RoleParams) GetRid() string {
	if m != nil {
		return m.Rid
	}
	return ""
}

func (m *RoleParams) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RoleParams) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

type Role struct {
	Rid                  string   `protobuf:"bytes,1,opt,name=Rid,proto3" json:"Rid,omitempty"`
	GroupId              string   `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Create               int64    `protobuf:"varint,4,opt,name=create,proto3" json:"create,omitempty"`
	Update               int64    `protobuf:"varint,5,opt,name=update,proto3" json:"update,omitempty"`
	IsValid              int64    `protobuf:"varint,6,opt,name=isValid,proto3" json:"isValid,omitempty"`
	IsDel                int64    `protobuf:"varint,7,opt,name=isDel,proto3" json:"isDel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_d895858b00dee792, []int{1}
}

func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetRid() string {
	if m != nil {
		return m.Rid
	}
	return ""
}

func (m *Role) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Role) GetCreate() int64 {
	if m != nil {
		return m.Create
	}
	return 0
}

func (m *Role) GetUpdate() int64 {
	if m != nil {
		return m.Update
	}
	return 0
}

func (m *Role) GetIsValid() int64 {
	if m != nil {
		return m.IsValid
	}
	return 0
}

func (m *Role) GetIsDel() int64 {
	if m != nil {
		return m.IsDel
	}
	return 0
}

//这里返回结果应该是一个Role类型
type RolePn struct {
	Pn                   int64    `protobuf:"varint,1,opt,name=pn,proto3" json:"pn,omitempty"`
	Ps                   int64    `protobuf:"varint,2,opt,name=ps,proto3" json:"ps,omitempty"`
	Role                 []*Role  `protobuf:"bytes,3,rep,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RolePn) Reset()         { *m = RolePn{} }
func (m *RolePn) String() string { return proto.CompactTextString(m) }
func (*RolePn) ProtoMessage()    {}
func (*RolePn) Descriptor() ([]byte, []int) {
	return fileDescriptor_d895858b00dee792, []int{2}
}

func (m *RolePn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RolePn.Unmarshal(m, b)
}
func (m *RolePn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RolePn.Marshal(b, m, deterministic)
}
func (m *RolePn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RolePn.Merge(m, src)
}
func (m *RolePn) XXX_Size() int {
	return xxx_messageInfo_RolePn.Size(m)
}
func (m *RolePn) XXX_DiscardUnknown() {
	xxx_messageInfo_RolePn.DiscardUnknown(m)
}

var xxx_messageInfo_RolePn proto.InternalMessageInfo

func (m *RolePn) GetPn() int64 {
	if m != nil {
		return m.Pn
	}
	return 0
}

func (m *RolePn) GetPs() int64 {
	if m != nil {
		return m.Ps
	}
	return 0
}

func (m *RolePn) GetRole() []*Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func init() {
	proto.RegisterType((*RoleParams)(nil), "admin.RoleParams")
	proto.RegisterType((*Role)(nil), "admin.Role")
	proto.RegisterType((*RolePn)(nil), "admin.RolePn")
}

func init() { proto.RegisterFile("proto/role.proto", fileDescriptor_d895858b00dee792) }

var fileDescriptor_d895858b00dee792 = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0xdd, 0x66, 0xbb, 0x8b, 0x53, 0xd4, 0x36, 0x88, 0x84, 0x5e, 0x2c, 0x7b, 0x2a, 0x08,
	0x2d, 0xac, 0x4f, 0x20, 0x14, 0xa4, 0xe0, 0x41, 0x56, 0xf4, 0x1e, 0x9b, 0x41, 0x02, 0x69, 0x12,
	0x92, 0xad, 0x8f, 0xe4, 0x0b, 0xf9, 0x42, 0x92, 0x49, 0x2b, 0x3d, 0x28, 0xe8, 0x6d, 0xbe, 0x7f,
	0xf2, 0xcf, 0xcc, 0xfe, 0x2c, 0x8c, 0x7d, 0x70, 0xbd, 0x5b, 0x06, 0x67, 0x70, 0x41, 0x25, 0x1f,
	0x4a, 0xb5, 0xd5, 0x76, 0x3a, 0xc9, 0x8d, 0x5d, 0xaf, 0x4d, 0xcc, 0x9d, 0xe6, 0x01, 0xa0, 0x73,
	0x06, 0x1f, 0x65, 0x90, 0xdb, 0xc8, 0xc7, 0xc0, 0x82, 0x56, 0x82, 0xcd, 0x8a, 0xf9, 0x69, 0x97,
	0x4a, 0xce, 0xa1, 0xb4, 0x72, 0x8b, 0xa2, 0x20, 0x89, 0x6a, 0x2e, 0xa0, 0x7e, 0x0b, 0x6e, 0xe7,
	0xd7, 0x4a, 0x0c, 0x48, 0x3e, 0x60, 0xf3, 0x51, 0x40, 0x99, 0xc6, 0xa5, 0x41, 0x9d, 0x56, 0x7b,
	0x57, 0x2a, 0x7f, 0x37, 0x7d, 0xaf, 0x60, 0x47, 0x2b, 0xae, 0xa0, 0xda, 0x04, 0x94, 0x3d, 0x8a,
	0x72, 0x56, 0xcc, 0x59, 0xb7, 0xa7, 0xa4, 0xef, 0xbc, 0x4a, 0xfa, 0x30, 0xeb, 0x99, 0xd2, 0x74,
	0x1d, 0x5f, 0xa4, 0xd1, 0x4a, 0x54, 0xd4, 0x38, 0x20, 0xbf, 0x84, 0xa1, 0x8e, 0x2b, 0x34, 0xa2,
	0x26, 0x3d, 0x43, 0xb3, 0x86, 0x8a, 0x3e, 0xdb, 0xf2, 0x73, 0x18, 0x78, 0x4b, 0x87, 0xb2, 0x6e,
	0xe0, 0x33, 0x47, 0x3a, 0x31, 0x71, 0xe4, 0xd7, 0x50, 0xa6, 0x20, 0x05, 0x9b, 0xb1, 0xf9, 0xa8,
	0x1d, 0x2d, 0x28, 0xc9, 0x45, 0x32, 0x77, 0xd4, 0x68, 0x3f, 0x0b, 0x18, 0x25, 0x7c, 0xc2, 0xf0,
	0xae, 0x37, 0xc8, 0x97, 0x50, 0xdf, 0x29, 0x45, 0x29, 0x4c, 0x8e, 0x5e, 0xe7, 0x84, 0xa7, 0x17,
	0x07, 0x09, 0xa3, 0x77, 0x36, 0x62, 0x73, 0xc2, 0x6f, 0xa0, 0xbe, 0xc7, 0x9e, 0x0c, 0x67, 0xc7,
	0x06, 0xfb, 0xd3, 0xe3, 0x16, 0x60, 0x85, 0x06, 0x7b, 0xfc, 0xc7, 0x82, 0x16, 0xe0, 0x99, 0x62,
	0xfa, 0xbb, 0xe7, 0xb5, 0xa2, 0xdf, 0xe3, 0xf6, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x72, 0x7d, 0xba,
	0xcb, 0x4c, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for RoleService service

type RoleServiceClient interface {
	AddRole(ctx context.Context, in *RoleParams, opts ...client.CallOption) (*Response, error)
	GetRole(ctx context.Context, in *RolePn, opts ...client.CallOption) (*Response, error)
	DeleteRole(ctx context.Context, in *RoleParams, opts ...client.CallOption) (*Response, error)
	UpdateRole(ctx context.Context, in *RoleParams, opts ...client.CallOption) (*Response, error)
}

type roleServiceClient struct {
	c           client.Client
	serviceName string
}

func NewRoleServiceClient(serviceName string, c client.Client) RoleServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "admin"
	}
	return &roleServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *roleServiceClient) AddRole(ctx context.Context, in *RoleParams, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "RoleService.AddRole", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) GetRole(ctx context.Context, in *RolePn, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "RoleService.GetRole", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) DeleteRole(ctx context.Context, in *RoleParams, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "RoleService.DeleteRole", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) UpdateRole(ctx context.Context, in *RoleParams, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "RoleService.UpdateRole", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RoleService service

type RoleServiceHandler interface {
	AddRole(context.Context, *RoleParams, *Response) error
	GetRole(context.Context, *RolePn, *Response) error
	DeleteRole(context.Context, *RoleParams, *Response) error
	UpdateRole(context.Context, *RoleParams, *Response) error
}

func RegisterRoleServiceHandler(s server.Server, hdlr RoleServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&RoleService{hdlr}, opts...))
}

type RoleService struct {
	RoleServiceHandler
}

func (h *RoleService) AddRole(ctx context.Context, in *RoleParams, out *Response) error {
	return h.RoleServiceHandler.AddRole(ctx, in, out)
}

func (h *RoleService) GetRole(ctx context.Context, in *RolePn, out *Response) error {
	return h.RoleServiceHandler.GetRole(ctx, in, out)
}

func (h *RoleService) DeleteRole(ctx context.Context, in *RoleParams, out *Response) error {
	return h.RoleServiceHandler.DeleteRole(ctx, in, out)
}

func (h *RoleService) UpdateRole(ctx context.Context, in *RoleParams, out *Response) error {
	return h.RoleServiceHandler.UpdateRole(ctx, in, out)
}
