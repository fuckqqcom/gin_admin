// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/per.proto

package admin

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PerParams struct {
	Pid                  string   `protobuf:"bytes,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GroupId              string   `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerParams) Reset()         { *m = PerParams{} }
func (m *PerParams) String() string { return proto.CompactTextString(m) }
func (*PerParams) ProtoMessage()    {}
func (*PerParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_02b00dd8d68daa3f, []int{0}
}

func (m *PerParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerParams.Unmarshal(m, b)
}
func (m *PerParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerParams.Marshal(b, m, deterministic)
}
func (m *PerParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerParams.Merge(m, src)
}
func (m *PerParams) XXX_Size() int {
	return xxx_messageInfo_PerParams.Size(m)
}
func (m *PerParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PerParams.DiscardUnknown(m)
}

var xxx_messageInfo_PerParams proto.InternalMessageInfo

func (m *PerParams) GetPid() string {
	if m != nil {
		return m.Pid
	}
	return ""
}

func (m *PerParams) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PerParams) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

//这里定义的好好想想，是针对api还是针对所有的东西包括目录
//https://github.com/LyricTian/gin-admin/blob/master/src/schema/s_menu.go
type Per struct {
	Pid                  string   `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	GroupId              string   `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Flag                 string   `protobuf:"bytes,4,opt,name=flag,proto3" json:"flag,omitempty"`
	Sort                 int64    `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Url                  string   `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Method               string   `protobuf:"bytes,7,opt,name=method,proto3" json:"method,omitempty"`
	LevelCode            string   `protobuf:"bytes,8,opt,name=levelCode,proto3" json:"levelCode,omitempty"`
	ParentId             string   `protobuf:"bytes,9,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	Params               string   `protobuf:"bytes,15,opt,name=Params,proto3" json:"Params,omitempty"`
	Pattern              string   `protobuf:"bytes,16,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Create               int64    `protobuf:"varint,10,opt,name=create,proto3" json:"create,omitempty"`
	Update               int64    `protobuf:"varint,11,opt,name=update,proto3" json:"update,omitempty"`
	IsValid              int64    `protobuf:"varint,12,opt,name=isValid,proto3" json:"isValid,omitempty"`
	IsDel                int64    `protobuf:"varint,13,opt,name=isDel,proto3" json:"isDel,omitempty"`
	Creator              string   `protobuf:"bytes,14,opt,name=creator,proto3" json:"creator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Per) Reset()         { *m = Per{} }
func (m *Per) String() string { return proto.CompactTextString(m) }
func (*Per) ProtoMessage()    {}
func (*Per) Descriptor() ([]byte, []int) {
	return fileDescriptor_02b00dd8d68daa3f, []int{1}
}

func (m *Per) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Per.Unmarshal(m, b)
}
func (m *Per) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Per.Marshal(b, m, deterministic)
}
func (m *Per) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Per.Merge(m, src)
}
func (m *Per) XXX_Size() int {
	return xxx_messageInfo_Per.Size(m)
}
func (m *Per) XXX_DiscardUnknown() {
	xxx_messageInfo_Per.DiscardUnknown(m)
}

var xxx_messageInfo_Per proto.InternalMessageInfo

func (m *Per) GetPid() string {
	if m != nil {
		return m.Pid
	}
	return ""
}

func (m *Per) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *Per) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Per) GetFlag() string {
	if m != nil {
		return m.Flag
	}
	return ""
}

func (m *Per) GetSort() int64 {
	if m != nil {
		return m.Sort
	}
	return 0
}

func (m *Per) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Per) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Per) GetLevelCode() string {
	if m != nil {
		return m.LevelCode
	}
	return ""
}

func (m *Per) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *Per) GetParams() string {
	if m != nil {
		return m.Params
	}
	return ""
}

func (m *Per) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *Per) GetCreate() int64 {
	if m != nil {
		return m.Create
	}
	return 0
}

func (m *Per) GetUpdate() int64 {
	if m != nil {
		return m.Update
	}
	return 0
}

func (m *Per) GetIsValid() int64 {
	if m != nil {
		return m.IsValid
	}
	return 0
}

func (m *Per) GetIsDel() int64 {
	if m != nil {
		return m.IsDel
	}
	return 0
}

func (m *Per) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

//这里返回结果应该是一个Role类型
type PerPn struct {
	Pn                   int64    `protobuf:"varint,1,opt,name=pn,proto3" json:"pn,omitempty"`
	Ps                   int64    `protobuf:"varint,2,opt,name=ps,proto3" json:"ps,omitempty"`
	Per                  []*Per   `protobuf:"bytes,3,rep,name=per,proto3" json:"per,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerPn) Reset()         { *m = PerPn{} }
func (m *PerPn) String() string { return proto.CompactTextString(m) }
func (*PerPn) ProtoMessage()    {}
func (*PerPn) Descriptor() ([]byte, []int) {
	return fileDescriptor_02b00dd8d68daa3f, []int{2}
}

func (m *PerPn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerPn.Unmarshal(m, b)
}
func (m *PerPn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerPn.Marshal(b, m, deterministic)
}
func (m *PerPn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerPn.Merge(m, src)
}
func (m *PerPn) XXX_Size() int {
	return xxx_messageInfo_PerPn.Size(m)
}
func (m *PerPn) XXX_DiscardUnknown() {
	xxx_messageInfo_PerPn.DiscardUnknown(m)
}

var xxx_messageInfo_PerPn proto.InternalMessageInfo

func (m *PerPn) GetPn() int64 {
	if m != nil {
		return m.Pn
	}
	return 0
}

func (m *PerPn) GetPs() int64 {
	if m != nil {
		return m.Ps
	}
	return 0
}

func (m *PerPn) GetPer() []*Per {
	if m != nil {
		return m.Per
	}
	return nil
}

func init() {
	proto.RegisterType((*PerParams)(nil), "admin.PerParams")
	proto.RegisterType((*Per)(nil), "admin.Per")
	proto.RegisterType((*PerPn)(nil), "admin.PerPn")
}

func init() { proto.RegisterFile("proto/per.proto", fileDescriptor_02b00dd8d68daa3f) }

var fileDescriptor_02b00dd8d68daa3f = []byte{
	// 407 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x6e, 0x13, 0x31,
	0x10, 0x86, 0xd9, 0x38, 0xd9, 0x74, 0xa7, 0xa5, 0x29, 0x16, 0x42, 0xa3, 0xa8, 0x87, 0x28, 0xa7,
	0x70, 0x20, 0x54, 0xe5, 0x09, 0x10, 0x45, 0xa8, 0xe2, 0xb2, 0x5a, 0x04, 0x77, 0x53, 0x0f, 0x65,
	0x25, 0x67, 0xd7, 0x1a, 0x7b, 0xfb, 0x90, 0xbc, 0x13, 0x12, 0xf2, 0x78, 0xd3, 0xf4, 0x40, 0xa5,
	0xdc, 0xe6, 0xff, 0x66, 0xfc, 0xcf, 0xee, 0x6f, 0xc3, 0xc2, 0x73, 0x1f, 0xfb, 0xf7, 0x9e, 0x78,
	0x2b, 0x95, 0x9e, 0x19, 0xbb, 0x6b, 0xbb, 0xe5, 0xab, 0xcc, 0x87, 0xd8, 0xba, 0x90, 0x3b, 0xeb,
	0xaf, 0x50, 0xd5, 0xc4, 0xb5, 0x61, 0xb3, 0x0b, 0xfa, 0x02, 0x94, 0x6f, 0x2d, 0xaa, 0x55, 0xb1,
	0xa9, 0x9a, 0x54, 0x6a, 0x0d, 0xd3, 0xce, 0xec, 0x08, 0x0b, 0x41, 0x52, 0x6b, 0x84, 0xf9, 0x3d,
	0xf7, 0x83, 0xbf, 0xb5, 0x38, 0x11, 0xbc, 0x97, 0xeb, 0xbf, 0x13, 0x50, 0x35, 0xf1, 0xde, 0xa7,
	0x38, 0xf8, 0x3c, 0x7b, 0xe6, 0x71, 0x83, 0x7a, 0xb2, 0x41, 0xc3, 0xf4, 0x97, 0x33, 0xf7, 0x38,
	0xcd, 0x2c, 0xd5, 0x89, 0x85, 0x9e, 0x23, 0xce, 0x56, 0xc5, 0x46, 0x35, 0x52, 0xa7, 0x3d, 0x03,
	0x3b, 0x2c, 0xf3, 0x9e, 0x81, 0x9d, 0x7e, 0x03, 0xe5, 0x8e, 0xe2, 0xef, 0xde, 0xe2, 0x5c, 0xe0,
	0xa8, 0xf4, 0x25, 0x54, 0x8e, 0x1e, 0xc8, 0x7d, 0xea, 0x2d, 0xe1, 0x89, 0xb4, 0x0e, 0x40, 0x2f,
	0xe1, 0xa4, 0x36, 0x4c, 0x5d, 0xbc, 0xb5, 0x58, 0x49, 0xf3, 0x51, 0x27, 0xc7, 0x9c, 0x0e, 0x2e,
	0xb2, 0xe3, 0x98, 0x15, 0xc2, 0xdc, 0x9b, 0x18, 0x89, 0x3b, 0xbc, 0xc8, 0x7f, 0x34, 0xca, 0x74,
	0xe2, 0x8e, 0xc9, 0x44, 0x42, 0x90, 0x6f, 0x1d, 0x55, 0xe2, 0x83, 0xb7, 0x89, 0x9f, 0x66, 0x9e,
	0x55, 0x72, 0x6a, 0xc3, 0x0f, 0xe3, 0x5a, 0x8b, 0x67, 0xd2, 0xd8, 0x4b, 0xfd, 0x1a, 0x66, 0x6d,
	0xb8, 0x21, 0x87, 0x2f, 0x85, 0x67, 0x91, 0xe6, 0xc5, 0xb1, 0x67, 0x3c, 0xcf, 0x9b, 0x47, 0xb9,
	0xfe, 0x0c, 0xb3, 0x74, 0x99, 0x9d, 0x3e, 0x87, 0x89, 0xef, 0x24, 0x7f, 0xd5, 0x4c, 0x7c, 0xd6,
	0x41, 0x92, 0x4f, 0x3a, 0xe8, 0x4b, 0x50, 0x9e, 0x18, 0xd5, 0x4a, 0x6d, 0x4e, 0xaf, 0x61, 0x2b,
	0xaf, 0x63, 0x5b, 0x13, 0x37, 0x09, 0x5f, 0xff, 0x29, 0x00, 0x6a, 0xe2, 0x6f, 0xc4, 0x0f, 0xed,
	0x1d, 0xe9, 0x77, 0x50, 0x7e, 0xb4, 0x56, 0xee, 0xf5, 0x30, 0x99, 0x53, 0x58, 0x2e, 0x46, 0xd2,
	0x50, 0xf0, 0x7d, 0x17, 0x68, 0xfd, 0x42, 0xbf, 0x85, 0xf2, 0x0b, 0xc5, 0x34, 0x7e, 0xf6, 0x64,
	0xbc, 0xfb, 0xdf, 0xe8, 0x15, 0x54, 0x37, 0xe4, 0x28, 0xd2, 0xd1, 0xe6, 0x57, 0x50, 0x7d, 0x97,
	0xd4, 0x8e, 0x3d, 0xf1, 0xb3, 0x94, 0x77, 0xfe, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7e,
	0x4b, 0x0a, 0x83, 0x14, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for PerService service

type PerServiceClient interface {
	AddPer(ctx context.Context, in *PerParams, opts ...client.CallOption) (*Response, error)
	GetPer(ctx context.Context, in *PerPn, opts ...client.CallOption) (*Response, error)
	DeletePer(ctx context.Context, in *PerParams, opts ...client.CallOption) (*Response, error)
	UpdatePer(ctx context.Context, in *PerParams, opts ...client.CallOption) (*Response, error)
}

type perServiceClient struct {
	c           client.Client
	serviceName string
}

func NewPerServiceClient(serviceName string, c client.Client) PerServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "admin"
	}
	return &perServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *perServiceClient) AddPer(ctx context.Context, in *PerParams, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PerService.AddPer", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *perServiceClient) GetPer(ctx context.Context, in *PerPn, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PerService.GetPer", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *perServiceClient) DeletePer(ctx context.Context, in *PerParams, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PerService.DeletePer", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *perServiceClient) UpdatePer(ctx context.Context, in *PerParams, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PerService.UpdatePer", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PerService service

type PerServiceHandler interface {
	AddPer(context.Context, *PerParams, *Response) error
	GetPer(context.Context, *PerPn, *Response) error
	DeletePer(context.Context, *PerParams, *Response) error
	UpdatePer(context.Context, *PerParams, *Response) error
}

func RegisterPerServiceHandler(s server.Server, hdlr PerServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&PerService{hdlr}, opts...))
}

type PerService struct {
	PerServiceHandler
}

func (h *PerService) AddPer(ctx context.Context, in *PerParams, out *Response) error {
	return h.PerServiceHandler.AddPer(ctx, in, out)
}

func (h *PerService) GetPer(ctx context.Context, in *PerPn, out *Response) error {
	return h.PerServiceHandler.GetPer(ctx, in, out)
}

func (h *PerService) DeletePer(ctx context.Context, in *PerParams, out *Response) error {
	return h.PerServiceHandler.DeletePer(ctx, in, out)
}

func (h *PerService) UpdatePer(ctx context.Context, in *PerParams, out *Response) error {
	return h.PerServiceHandler.UpdatePer(ctx, in, out)
}
